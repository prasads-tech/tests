- name: Commit and Push Changes
  env:
    ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
  run: |
    git config user.name "usertest"
    git config user.email "usertest@test.com"
    
    # Stash any unstaged changes to prevent merge conflicts
    git stash
    
    # Checkout the branch and pull the latest changes from remote
    git checkout -b $BRANCH_NAME
    git pull origin $BRANCH_NAME --rebase
    
    # Apply stashed changes, if any
    git stash pop || true
    
    # Stage and commit the changes
    git add .
    git commit -m "Automated commit"
    
    # Push changes, use --force-with-lease to ensure safe push
    git push https://x-access-token:${ACCESS_TOKEN}@github.com/${{ github.repository }} $BRANCH_NAME --force-with-lease



PR_RESPONSE=$(curl -X POST \
    -H "Authorization: Bearer $ACCESS_TOKEN" \
    -H "Accept: application/vnd.github+json" \
    https://api.github.com/repos/ValueMomentum-Inc/GEICOPOC-Spec/pulls \
    -d '{
      "title": "Automated PR",
      "head": "'"${BRANCH_NAME}"'",
      "base": "main",
      "body": "Automated PR created via GitHub Actions"
    }')



- name: Create a Pull Request
  env:
    ACCESS_TOKEN: ${{ env.ACCESS_TOKEN }}
  run: |
    PR_RESPONSE=$(curl -X POST \
      -H "Authorization: Bearer ${ACCESS_TOKEN}" \
      -H "Accept: application/vnd.github+json" \
      https://api.github.com/repos/${{ github.repository }}/pulls \
      -d '{
        "title": "Automated PR",
        "head": "'"${{ github.actor }}/$BRANCH_NAME"'",
        "base": "main",
        "body": "Automated PR created via GitHub Actions"
      }')
    echo "Pull Request Response: $PR_RESPONSE"


- name: Debug PR Creation
  run: |
    echo "Branch: $BRANCH_NAME"
    echo "Repo: ${{ github.repository }}"
    echo "PR Response: $PR_RESPONSE"

