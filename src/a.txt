    - name: Push branch to repository
      env:
        GITHUB_APP_ID: ${{ secrets.GITHUB_APP_ID }}
        GITHUB_APP_PRIVATE_KEY: ${{ secrets.GITHUB_APP_PRIVATE_KEY }}
      run: |
        # Generate JWT
        JWT=$(python3 -c '
import jwt
import time
import os
private_key = os.getenv("GITHUB_APP_PRIVATE_KEY")
app_id = os.getenv("GITHUB_APP_ID")
payload = {"iat": int(time.time()), "exp": int(time.time()) + (10 * 60), "iss": app_id}
jwt_token = jwt.encode(payload, private_key, algorithm="RS256")
print(jwt_token)
')
        echo "JWT generated: $JWT"

        # Use JWT to authenticate and push branch
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_APP_PRIVATE_KEY }}@github.com/${{ github.repository }}.git
        git push origin HEAD:${{ steps.create_branch.outputs.branch }}

    - name: Create Pull Request
      env:
        GITHUB_APP_ID: ${{ secrets.GITHUB_APP_ID }}
        GITHUB_APP_PRIVATE_KEY: ${{ secrets.GITHUB_APP_PRIVATE_KEY }}
      run: |
        # Generate JWT
        JWT=$(python3 -c '
import jwt
import time
import os
private_key = os.getenv("GITHUB_APP_PRIVATE_KEY")
app_id = os.getenv("GITHUB_APP_ID")
payload = {"iat": int(time.time()), "exp": int(time.time()) + (10 * 60), "iss": app_id}
jwt_token = jwt.encode(payload, private_key, algorithm="RS256")
print(jwt_token)
')

        # Create Pull Request
        PR_RESPONSE=$(curl -s -X POST \
          -H "Authorization: Bearer $JWT" \
          -H "Content-Type: application/json" \
          -d '{"title":"Auto-generated PR for new JSON files", "head":"'"${{ steps.create_branch.outputs.branch }}"'", "base":"main", "body":"This PR contains changes generated from the new JSON inputs."}' \
          https://api.github.com/repos/${{ github.repository }}/pulls)

        echo "Pull request response: $PR_RESPONSE"
        PR_URL=$(echo $PR_RESPONSE | jq -r '.html_url')
        echo "Created Pull Request: $PR_URL"
