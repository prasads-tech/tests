      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip install -r requirements.txt
          sudo apt-get install -y jq openssl

      - name: Generate JWT
        id: generate-jwt
        run: |
          PRIVATE_KEY="${{ secrets.GITHUB_APP_PRIVATE_KEY }}"
          APP_ID="${{ secrets.GITHUB_APP_ID }}"
          EXPIRY_TIME=$(date +%s)
          EXPIRY_TIME=$((EXPIRY_TIME + 600)) # 10 minutes later

          HEADER='{"alg": "RS256", "typ": "JWT"}'
          PAYLOAD="{\"iat\": ${EXPIRY_TIME}, \"exp\": ${EXPIRY_TIME}, \"iss\": \"${APP_ID}\"}"

          HEADER_BASE64=$(echo -n "$HEADER" | jq -c . | openssl base64 -e | tr -d '=' | tr '+/' '-_' | tr -d '\n')
          PAYLOAD_BASE64=$(echo -n "$PAYLOAD" | jq -c . | openssl base64 -e | tr -d '=' | tr '+/' '-_' | tr -d '\n')

          SIGNATURE=$(echo -n "${HEADER_BASE64}.${PAYLOAD_BASE64}" | openssl dgst -sha256 -sign <(echo -n "$PRIVATE_KEY") | openssl base64 -e | tr -d '=' | tr '+/' '-_' | tr -d '\n')

          JWT="${HEADER_BASE64}.${PAYLOAD_BASE64}.${SIGNATURE}"

          echo "JWT=${JWT}" >> $GITHUB_ENV
          echo "Generated JWT: ${JWT}"

private_key=$(echo "${{ secrets.GITHUB_APP_PRIVATE_KEY }}" | base64 -d)
app_id=$(echo "${{ secrets.GITHUB_APP_ID }}")

if [ -z "$private_key" ] || [ -z "$app_id" ]; then
  echo "Missing GitHub App credentials"
  exit 1
fi



JWT=$(python3 -c '
import jwt
import time
import os

private_key = os.getenv("GITHUB_APP_PRIVATE_KEY")
app_id = os.getenv("GITHUB_APP_ID")

if not private_key or not app_id:
    raise ValueError("Missing environment variables for private key or app ID")

payload = {"iat": int(time.time()), "exp": int(time.time()) + (10 * 60), "iss": app_id}
jwt_token = jwt.encode(payload, private_key, algorithm="RS256")
print(jwt_token)
')

echo "Generated JWT: $JWT"



git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

echo "PR creation response: $PR_RESPONSE"

gh pr create --title "Auto-generated PR for new JSON files" --body "This PR contains changes generated from the new JSON inputs." --base main --head "$BRANCH_NAME"


