name: Read and Print YAML File

on:
  push:
    paths:
      - '**/*.yaml'
      - '**/*.yml'

jobs:
  read_and_print:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Find Modified YAML File
        id: find_yaml
        run: |
          # Find the first modified YAML file in the latest commit
          FILE=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.ya?ml$' | head -n 1)
          if [ -z "$FILE" ]; then
            echo "No YAML file changes detected."
            exit 1
          fi
          echo "file=$FILE" >> $GITHUB_OUTPUT

      - name: Print YAML File Content
        run: |
          cat "${{ steps.find_yaml.outputs.file }}"



#!/bin/bash

# Load environment variables from .env file
set -o allexport
source Cluster-Management-Repo-dev/.env
set +o allexport

# Run the Python script with the loaded environment variables
python Cluster-Management-Repo-dev/Automation/AKS/Workload-Cluster/main.py --input "$INPUT_PATH" --mapping "$MAPPING_PATH" --template "$TEMPLATE_PATH"

# Check if there are any changes to commit
if [[ `git status --porcelain` ]]; then
  # Configure Git
  git config --local user.email "action@github.com"
  git config --local user.name "GitHub Action"

  # Commit and push changes
  git add .
  git commit -m "Automated output update"
  git push origin HEAD:automated/output-update

  # Create a pull request using GitHub CLI
  gh pr create --title "Automated output update" --body "This PR is automatically created by a GitHub Action." --base main --head automated/output-update
else
  echo "No changes detected, skipping commit and PR creation."
fi


name: Auto Trigger Pipeline

on:
  push:
    paths:
      - 'Clusters-Dev/AKS/Input/input.json'
      - 'Clusters-NonProd/AKS/Input/input.json'
      - 'Clusters-Prod/AKS/Input/input.json'
    branches:
      - main

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Execute main.py
        run: python Automation/AKS/Workload-Cluster/main.py --input Clusters-Dev/AKS/Input/input.json --mapping Cluster-artifacts/Templates/FieldMapping.json --template Cluster-artifacts/Templates/AKS-templates01.yaml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: Update workload configurations based on input.json
          branch: auto-update-config
          title: Update Workload Configurations
          body: |
            This PR updates the workload configurations by copying the latest changes from the Cluster-artifacts directory.
          base: main
